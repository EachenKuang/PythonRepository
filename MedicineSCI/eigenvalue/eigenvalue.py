# -*- coding:utf-8 -*-
# !/usr/bin/python2

#----------------------------------------------
#计算4个特征测度
#高关注度（HighAttention）、新颖性（Novelty）、创新性（Innovation）、学科交叉性（Interdisciplinary）
#
#-----------------------------------------------

topic1=[7124, 7125, 7158, 7172, 7196, 7199, 7238, 7266, 7267, 7271, 7283, 7296, 7302, 7321, 7327, 7352, 7364, 7365, 7378, 7416, 7442, 7445, 7446]
topic2=[7122, 7148, 7154, 7177, 7179, 7188, 7193, 7195, 7203, 7212, 7224, 7229, 7236, 7242, 7274, 7292, 7311, 7318, 7324, 7326, 7339, 7347, 7353, 7354, 7355, 7368, 7383, 7386, 7387, 7391, 7399, 7410, 7417, 7438, 7444]
topic3=[7130, 7131, 7145, 7153, 7166, 7206, 7207, 7219, 7220, 7226, 7237, 7248, 7258, 7262, 7281, 7308, 7338, 7348, 7350, 7371, 7379, 7390, 7419, 7422, 7424, 7432, 7435, 7437, 7448, 7450, 7452, 7455]
topic4=[7134, 7138, 7142, 7156, 7162, 7178, 7180, 7181, 7184, 7187, 7197, 7230, 7233, 7241, 7243, 7245, 7259, 7263, 7272, 7285, 7298, 7304, 7314, 7333, 7360, 7372, 7373, 7384, 7393, 7406, 7414, 7426, 7436, 7456]
topic5=[7128, 7135, 7150, 7152, 7167, 7169, 7175, 7191, 7192, 7204, 7210, 7211, 7221, 7240, 7261, 7273, 7275, 7279, 7294, 7297, 7312, 7322, 7328, 7351, 7356, 7363, 7377, 7395, 7401, 7413, 7420, 7421, 7425, 7431]
topic6=[7123, 7126, 7127, 7143, 7146, 7151, 7157, 7161, 7164, 7168, 7171, 7176, 7201, 7209, 7222, 7231, 7234, 7250, 7251, 7253, 7264, 7280, 7282, 7291, 7293, 7295, 7299, 7306, 7317, 7329, 7335, 7342, 7345, 7357, 7402, 7405, 7409, 7427, 7449]
topic7=[7140, 7144, 7155, 7159, 7165, 7183, 7185, 7194, 7202, 7205, 7208, 7218, 7225, 7249, 7260, 7269, 7277, 7278, 7284, 7289, 7307, 7310, 7319, 7331, 7334, 7341, 7344, 7367, 7375, 7392, 7397, 7398, 7403, 7411, 7418, 7429, 7433, 7434, 7440, 7443, 7447]
topic8=[7133, 7136, 7139, 7147, 7149, 7163, 7189, 7190, 7198, 7216, 7227, 7232, 7254, 7256, 7268, 7287, 7288, 7315, 7343, 7346, 7359, 7366, 7369, 7380, 7381, 7382, 7388, 7394, 7400, 7404, 7408, 7412, 7415, 7423, 7430, 7441]
topic9=[7129, 7137, 7141, 7174, 7182, 7186, 7213, 7214, 7215, 7223, 7228, 7235, 7239, 7255, 7265, 7276, 7286, 7301, 7313, 7320, 7323, 7332, 7337, 7340, 7349, 7358, 7361, 7370, 7385, 7389, 7396, 7439, 7451, 7453, 7454]
topic10=[7121, 7132, 7160, 7170, 7173, 7200, 7217, 7244, 7246, 7247, 7252, 7257, 7270, 7290, 7300, 7303, 7305, 7309, 7316, 7325, 7330, 7336, 7362, 7374, 7376, 7407, 7428]

topic = []
topic.append(topic1)
topic.append(topic2)
topic.append(topic3)
topic.append(topic4)
topic.append(topic5)
topic.append(topic6)
topic.append(topic7)
topic.append(topic8)
topic.append(topic9)
topic.append(topic10)

list_PY=[]
list_TC=[]
file = open("Id_PY_TC.txt","r")
for line in file:
    line = line.split()
    list_PY.append(line[1])
    list_TC.append(line[2])


#〖HA〗_i代表第i个主题的关注度值，∑_(j=1)^n▒C_j 计算了主题内n篇文献的总被引频次，n代表主题内文献总量。
#被引用频次 TC
def HighAttention(times_cited):
    total_times_cited = 0.0
    n = len(times_cited)
    for cite in times_cited:
        total_times_cited += int(cite)
    return total_times_cited/n


#N_i代表第i个主题的新颖性值，∑_(j=1)^n▒T_j 计算了主题内n篇文献的总产生时间，n代表主题内文献总量。
#发表时间 PY
def Novelty(published_year):
    total_published_year = 0.0
    n = len(published_year)
    for year in published_year:
        total_published_year += int(year)
    return total_published_year/n


#
# def Innovation():
#     return n

#
#参考文献 CR
#所属分类 SC（数据库中保留SC，WC为null，先用SC）
#需要用到的文件  ESIMasterJournalList.xlsx
#每个paperID 对应一个主题，对每个主题使用下面这个函数
#传入参数为一个包含paperID的List
# def Interdisciplinary(paperIDs):

for i in range(0, 10):
    print "topic"+str(i)
    print Novelty([list_PY[j-1] for j in topic[i]])
    print HighAttention([list_TC[k-1] for k in topic[i]])